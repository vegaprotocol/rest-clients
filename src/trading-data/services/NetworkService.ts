/* generated using openapi-typescript-codegen -- do no edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { googlerpcStatus } from '../models/googlerpcStatus';
import type { v2GetEpochResponse } from '../models/v2GetEpochResponse';
import type { v2GetNetworkDataResponse } from '../models/v2GetNetworkDataResponse';
import type { v2GetNetworkLimitsResponse } from '../models/v2GetNetworkLimitsResponse';
import type { v2GetNetworkParameterResponse } from '../models/v2GetNetworkParameterResponse';
import type { v2GetNodeResponse } from '../models/v2GetNodeResponse';
import type { v2GetProtocolUpgradeStatusResponse } from '../models/v2GetProtocolUpgradeStatusResponse';
import type { v2GetStakeResponse } from '../models/v2GetStakeResponse';
import type { v2GetVegaTimeResponse } from '../models/v2GetVegaTimeResponse';
import type { v2ListCheckpointsResponse } from '../models/v2ListCheckpointsResponse';
import type { v2ListCoreSnapshotsResponse } from '../models/v2ListCoreSnapshotsResponse';
import type { v2ListDelegationsResponse } from '../models/v2ListDelegationsResponse';
import type { v2ListEthereumKeyRotationsResponse } from '../models/v2ListEthereumKeyRotationsResponse';
import type { v2ListKeyRotationsResponse } from '../models/v2ListKeyRotationsResponse';
import type { v2ListNetworkParametersResponse } from '../models/v2ListNetworkParametersResponse';
import type { v2ListNodesResponse } from '../models/v2ListNodesResponse';
import type { v2ListProtocolUpgradeProposalsResponse } from '../models/v2ListProtocolUpgradeProposalsResponse';

import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';

export class NetworkService {

    /**
     * List checkpoints
     * Get a list of information about checkpoints generated by the network
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListCheckpointsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListCheckpoints(
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListCheckpointsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/checkpoints',
            query: {
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List delegations
     * Get a list of the token delegations on the network
     * @param partyId Restrict delegations to those made by the given party ID.
     * @param nodeId Restrict delegations to those made to the given node ID.
     * @param epochId Return delegations made in the given epoch. If not set, delegations for the current epoch will be returned.
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListDelegationsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListDelegations(
        partyId?: string,
        nodeId?: string,
        epochId?: string,
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListDelegationsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/delegations',
            query: {
                'partyId': partyId,
                'nodeId': nodeId,
                'epochId': epochId,
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get epoch
     * Get data for a specific epoch, if ID is omitted, it retrieves the current epoch
     * @param id Epoch ID. If provided, returns the epoch with the given ID.
     * @param block Block height. If provided, returns the epoch that the given block is in.
     * @returns v2GetEpochResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetEpoch(
        id?: string,
        block?: string,
    ): CancelablePromise<v2GetEpochResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/epoch',
            query: {
                'id': id,
                'block': block,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get network data
     * Get data regarding the nodes of the network
     * @returns v2GetNetworkDataResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetNetworkData(): CancelablePromise<v2GetNetworkDataResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/network/data',
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get network limits
     * Get the network limits relating to asset and market creation
     * @returns v2GetNetworkLimitsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetNetworkLimits(): CancelablePromise<v2GetNetworkLimitsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/network/limits',
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List network parameters
     * Get a list of the network parameter keys and their values
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListNetworkParametersResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListNetworkParameters(
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListNetworkParametersResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/network/parameters',
            query: {
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get network parameter
     * Get a network parameter's value by its key
     * @param key Key identifying the network parameter.
     * @returns v2GetNetworkParameterResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetNetworkParameter(
        key: string,
    ): CancelablePromise<v2GetNetworkParameterResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/network/parameters/{key}',
            path: {
                'key': key,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get node
     * Get information about a given node
     * @param id Node ID to get data for.
     * @returns v2GetNodeResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetNode(
        id: string,
    ): CancelablePromise<v2GetNodeResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/node/{id}',
            path: {
                'id': id,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List nodes
     * Get a list of the nodes on the network along with the related information.
     * @param epochSeq Return the node list for the given epoch. If not set, the node list for the current epoch will be returned.
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListNodesResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListNodes(
        epochSeq?: string,
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListNodesResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/nodes',
            query: {
                'epochSeq': epochSeq,
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get stake
     * Get staking information for a given party
     * @param partyId Party ID for which the stake information is requested.
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2GetStakeResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetStake(
        partyId: string,
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2GetStakeResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/parties/{partyId}/stake',
            path: {
                'partyId': partyId,
            },
            query: {
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List snapshots
     * Get a list of core snapshots taken
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListCoreSnapshotsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListCoreSnapshots(
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListCoreSnapshotsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/snapshots',
            query: {
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List protocol upgrade proposals
     * Get a list of protocol upgrade proposals, optionally filtering on status or approver.
     * @param status Restrict protocol upgrade proposals to those with the given status.
     *
     * - PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING: The proposal is pending
     * - PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED: The proposal is approved
     * - PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED: The proposal is rejected
     * @param approvedBy Restrict protocol upgrade proposals to those approved by the given node ID.
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListProtocolUpgradeProposalsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListProtocolUpgradeProposals(
        status: 'PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED' | 'PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING' | 'PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED' | 'PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED' = 'PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED',
        approvedBy?: string,
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListProtocolUpgradeProposalsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/upgrade/proposals',
            query: {
                'status': status,
                'approvedBy': approvedBy,
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get protocol upgrade status
     * Get status of a protocol upgrade
     * @returns v2GetProtocolUpgradeStatusResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetProtocolUpgradeStatus(): CancelablePromise<v2GetProtocolUpgradeStatusResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/upgrade/status',
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List Ethereum key rotations
     * Get a list of information about Ethereum key rotations that have been performed by validator nodes
     * @param nodeId Node ID to get the rotation for, if provided.
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListEthereumKeyRotationsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListEthereumKeyRotations(
        nodeId?: string,
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListEthereumKeyRotationsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/vega/keys/ethereum/rotations',
            query: {
                'nodeId': nodeId,
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * List key rotations
     * Get a list of information about Vega key rotations that have been performed by validator nodes
     * @param nodeId Node ID to get key rotations for, if provided.
     * @param paginationFirst Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.
     * @param paginationAfter If paging forwards, the cursor string for the last row of the previous page.
     * @param paginationLast Number of records to be returned that sort less than row identified by cursor supplied in 'before'.
     * @param paginationBefore If paging forwards, the cursor string for the first row of the previous page.
     * @param paginationNewestFirst Whether to order the results with the newest records first. If not set, the default value is true.
     * @returns v2ListKeyRotationsResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceListKeyRotations(
        nodeId?: string,
        paginationFirst?: number,
        paginationAfter?: string,
        paginationLast?: number,
        paginationBefore?: string,
        paginationNewestFirst?: boolean,
    ): CancelablePromise<v2ListKeyRotationsResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/vega/keys/rotations',
            query: {
                'nodeId': nodeId,
                'pagination.first': paginationFirst,
                'pagination.after': paginationAfter,
                'pagination.last': paginationLast,
                'pagination.before': paginationBefore,
                'pagination.newestFirst': paginationNewestFirst,
            },
            errors: {
                500: `An internal server error`,
            },
        });
    }

    /**
     * Get Vega time
     * Get the current time of the network in Unix nanoseconds
     * @returns v2GetVegaTimeResponse A successful response.
     * @returns googlerpcStatus An unexpected error response.
     * @throws ApiError
     */
    public static tradingDataServiceGetVegaTime(): CancelablePromise<v2GetVegaTimeResponse | googlerpcStatus> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v2/vega/time',
            errors: {
                500: `An internal server error`,
            },
        });
    }

}
